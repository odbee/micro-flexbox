# Define the compiler
CC = gcc
CXX = g++

# Compiler and linker flags
CFLAGS = -IInclude -Wall -Wextra -Wundef -g -O0 -std=c99 -MMD -MP
CXXFLAGS = -IInclude -Wall -Wextra -Wundef -std=c++2a -MMD -MP

# Libraries to link
LDFLAGS = -Lsrc/lib
LIBS = -lmingw32 -lSDL2main -lSDL2 -lopengl32 -lSDL2_ttf

# The name of the final executable
TARGET = main

# The object files for the project
OBJS = main.o renderer.o micro_flexbox.o

# Dependency files (auto-generated by the compiler)
DEPS = $(OBJS:.o=.d)

# Default target
all: $(TARGET)

# Link the final executable
$(TARGET): $(OBJS)
	$(CXX) $(LDFLAGS) $(OBJS) $(LIBS) -o $(TARGET)

# Compile C++ source files
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Compile C source files
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

# Include dependency files (only if they exist)
-include $(DEPS)

# Phony targets
.PHONY: all clean

clean:
	rm -f $(OBJS) $(DEPS) $(TARGET)
